version: '3'

services:
  nginx:
    restart: always
    build: ./nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  client:
    build: ./nodemy-webapp
    volumes:
      - /app/node_modules
      - ./nodemy-webapp:/app
    ports:
      - '3000:3000'
  # client-online:
  #   build: ./project3-nodemy
  #   ports: 
  #     - '3001:3001'
  #   volumes:
  #     - /app/node_modules
  #     - ./project3-nodemy:/app
  api-server:
    restart: always
    build: ./nodemy-server
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./nodemy-server:/app
    environment:
      - PORT=${PORT}
      - MONGO_URI=${MONGO_URI}
      - DOMAIN=${DOMAIN}
      - JWT_SECRET=${JWT_SECRET}
      - ACCOUNT_EMAIL=${ACCOUNT_EMAIL}
      - PASSWORD_EMAIL=${PASSWORD_EMAIL}
      - REDIS_URI=${REDIS_URI}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - mongodb
  online-api:
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: ./learning-online-course
    env_file:
      - .env
    environment:
      - PORT2=${PORT2}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_URI=${MONGO_URI}
      - DOMAIN=${DOMAIN}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - '5001:5001'
    depends_on:
      - mongodb
      - redis
    volumes:
      - /app/node_modules
      - ./learning-online-course:/app
  redis:
    restart: unless-stopped
    container_name: redis
    image: redis
    ports:
      - '6379:6379'
  mongodb:
    image: mongo:latest
    container_name: db
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - dbdata:/data/db
volumes:
  dbdata:
